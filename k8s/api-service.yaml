apiVersion: v1
kind: Service
metadata:
  name: c2048
  labels:
    app.kubernetes.io/name: c2048
    app.kubernetes.io/instance: c2048
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: c2048
    app.kubernetes.io/instance: c2048

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2048
  labels:
    app.kubernetes.io/name: c2048
    app.kubernetes.io/instance: c2048
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: c2048
      app.kubernetes.io/instance: c2048
  template:
    metadata:
      labels:
        app.kubernetes.io/name: c2048
        app.kubernetes.io/instance: c2048
    spec:
      securityContext: {}
      containers:
        - name: c2048
          securityContext: {}
          image: "epflsti/nginx"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
      nodeSelector:
        kubernetes.io/hostname: ip-10-0-2-245.us-east-2.compute.internal
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: c2048
  labels:
    app.kubernetes.io/name: c2048
    app.kubernetes.io/instance: c2048
  annotations:
    nginx.org/mergeable-ingress-type: minion
spec:
  ingressClassName: nginx
  rules:
    - host: "a2.shc7.clappit.io"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: c2048
                port:
                  number: 8080
